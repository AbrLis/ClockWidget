<Window x:Class="ClockWidgetApp.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClockWidgetApp"
        xmlns:helpers="clr-namespace:ClockWidgetApp.Helpers"
        mc:Ignorable="d"
        Title="Настройки виджета"
        MinHeight="300"
        Width="300"
        SizeToContent="Height"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        WindowStyle="ToolWindow"
        Topmost="True"
        Background="White">
    <StackPanel Margin="10">
        <!-- Общие настройки -->
        <GroupBox Header="Общие настройки"
                Margin="0,0,0,10">
            <StackPanel Margin="5">
                <!-- Видимость фона -->
                <TextBlock Text="Видимость фона:"
                           Margin="0,0,0,5"/>

                <Slider x:Name="BackgroundOpacitySlider"
                        Minimum="{Binding Source={x:Static helpers:Constants.MIN_WINDOW_OPACITY}}"
                        Maximum="{Binding Source={x:Static helpers:Constants.MAX_WINDOW_OPACITY}}"
                        Value="{Binding BackgroundOpacity, UpdateSourceTrigger=PropertyChanged}"
                        TickFrequency="{Binding Source={x:Static helpers:Constants.OPACITY_STEP}}"
                        IsSnapToTickEnabled="True"
                        IsMoveToPointEnabled="True"
                        ToolTip="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat=P0}"/>

                <TextBlock x:Name="BackgroundOpacityValueText"
                           Text="{Binding BackgroundOpacity, StringFormat=P0}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10"/>

                <!-- Видимость текста -->
                <TextBlock Text="Видимость текста:"
                           Margin="0,0,0,5"/>

                <Slider x:Name="TextOpacitySlider"
                        Minimum="{Binding Source={x:Static helpers:Constants.MIN_TEXT_OPACITY}}"
                        Maximum="{Binding Source={x:Static helpers:Constants.MAX_TEXT_OPACITY}}"
                        Value="{Binding TextOpacity, UpdateSourceTrigger=PropertyChanged}"
                        TickFrequency="{Binding Source={x:Static helpers:Constants.OPACITY_STEP}}"
                        IsSnapToTickEnabled="True"
                        IsMoveToPointEnabled="True"
                        ToolTip="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat=P0}"/>

                <TextBlock x:Name="TextOpacityValueText"
                           Text="{Binding TextOpacity, StringFormat=P0}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10"/>

                <!-- Чекбокс кукушки -->
                <CheckBox Content="Звук кукушки каждый час"
                          IsChecked="{Binding CuckooEveryHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,0,0,10"/>

                <CheckBox Content="Сигнал каждые полчаса"
                          IsChecked="{Binding HalfHourChimeEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,0,0,10"/>

            </StackPanel>
        </GroupBox>

        <!-- Настройки аналоговых часов -->
        <GroupBox Header="Настройки аналоговых часов"
                Margin="0,0,0,10">
            <StackPanel Margin="5">
                <CheckBox Content="Показывать аналоговые часы"
                          IsChecked="{Binding ShowAnalogClock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,5"/>
                <CheckBox Content="Поверх всех окон"
                          IsChecked="{Binding AnalogClockTopmost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,0,0,5"/>

                <!-- Размер аналоговых часов -->
                <TextBlock Text="Размер аналоговых часов:"
                           Margin="0,10,0,5"/>

                <Slider x:Name="AnalogClockSizeSlider"
                        Minimum="{Binding Source={x:Static helpers:Constants.MIN_ANALOG_CLOCK_SIZE}}"
                        Maximum="{Binding Source={x:Static helpers:Constants.MAX_ANALOG_CLOCK_SIZE}}"
                        Value="{Binding AnalogClockSize, UpdateSourceTrigger=PropertyChanged}"
                        TickFrequency="{Binding Source={x:Static helpers:Constants.ANALOG_CLOCK_SIZE_STEP}}"
                        IsSnapToTickEnabled="True"
                        IsMoveToPointEnabled="True"
                        ToolTip="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat=N0}"
                        IsEnabled="{Binding ShowAnalogClock}"/>

                <TextBlock x:Name="AnalogClockSizeValueText"
                           Text="{Binding AnalogClockSize, StringFormat='{}{0:F0}px'}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10"/>
            </StackPanel>
        </GroupBox>

        <!-- Настройки цифровых часов -->
        <GroupBox Header="Настройки цифровых часов"
                Margin="0,0,0,10">
            <StackPanel Margin="5">
                <CheckBox Content="Показывать цифровые часы"
                          IsChecked="{Binding ShowDigitalClock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,5"/>
                <CheckBox Content="Поверх всех окон"
                          IsChecked="{Binding DigitalClockTopmost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="0,0,0,5"/>

                <!-- Чекбокс отображения секунд -->
                <CheckBox x:Name="ShowSecondsCheckBox"
                          Content="Показывать секунды"
                          IsChecked="{Binding ShowSeconds, Mode=TwoWay}"
                          Margin="0,0,0,5"/>

                <!-- Размер шрифта -->
                <TextBlock Text="Размер шрифта:"
                           Margin="0,10,0,5"/>

                <Slider x:Name="FontSizeSlider"
                        Minimum="{Binding Source={x:Static helpers:Constants.MIN_FONT_SIZE}}"
                        Maximum="{Binding Source={x:Static helpers:Constants.MAX_FONT_SIZE}}"
                        Value="{Binding FontSize, UpdateSourceTrigger=PropertyChanged}"
                        TickFrequency="{Binding Source={x:Static helpers:Constants.FONT_SIZE_STEP}}"
                        IsSnapToTickEnabled="True"
                        IsMoveToPointEnabled="True"
                        ToolTip="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat=N0}"
                        IsEnabled="{Binding ShowDigitalClock}"/>

                <TextBlock x:Name="FontSizeValueText"
                           Text="{Binding FontSize, StringFormat='{}{0:F0}px'}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10"/>


            </StackPanel>
        </GroupBox>

        <!-- Кнопка закрытия и мини-кнопка логов -->
        <Grid Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="41"/>
                <!-- 36px кнопка + 5px отступ -->
            </Grid.ColumnDefinitions>
            <Button x:Name="CloseWidgetButton"
                    Content="Закрыть виджет"
                    Padding="10,5"
                    Background="#FFE0E0"
                    Click="CloseWidgetButton_Click"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Grid.Column="0"/>
            <Button x:Name="ShowLogsButton"
                    Content="logs"
                    Width="36"
                    Height="24"
                    FontSize="12"
                    Padding="0"
                    Background="#E0E0FF"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Click="ShowLogsButton_Click"
                    Grid.Column="1"/>
        </Grid>
    </StackPanel>
</Window> 